#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RiotServices
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="RiotAPI")]
	public partial class RiotDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMatch(Match instance);
    partial void UpdateMatch(Match instance);
    partial void DeleteMatch(Match instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    partial void InsertParticipant(Participant instance);
    partial void UpdateParticipant(Participant instance);
    partial void DeleteParticipant(Participant instance);
    partial void InsertParticipantStat(ParticipantStat instance);
    partial void UpdateParticipantStat(ParticipantStat instance);
    partial void DeleteParticipantStat(ParticipantStat instance);
    partial void InsertPlayer(Player instance);
    partial void UpdatePlayer(Player instance);
    partial void DeletePlayer(Player instance);
    partial void InsertApiKey(ApiKey instance);
    partial void UpdateApiKey(ApiKey instance);
    partial void DeleteApiKey(ApiKey instance);
    #endregion
		
		public RiotDataContext() : 
				base(global::RiotServices.Properties.Settings.Default.RiotAPIConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public RiotDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RiotDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RiotDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public RiotDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Match> Matches
		{
			get
			{
				return this.GetTable<Match>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<Participant> Participants
		{
			get
			{
				return this.GetTable<Participant>();
			}
		}
		
		public System.Data.Linq.Table<ParticipantStat> ParticipantStats
		{
			get
			{
				return this.GetTable<ParticipantStat>();
			}
		}
		
		public System.Data.Linq.Table<Player> Players
		{
			get
			{
				return this.GetTable<Player>();
			}
		}
		
		public System.Data.Linq.Table<ApiKey> ApiKeys
		{
			get
			{
				return this.GetTable<ApiKey>();
			}
		}
		
		public System.Data.Linq.Table<FunStatsResponse> FunStatsResponses
		{
			get
			{
				return this.GetTable<FunStatsResponse>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FunStats")]
		public ISingleResult<FunStatsResponse> FunStats()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<FunStatsResponse>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Match")]
	public partial class Match : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _BucketTime;
		
		private long _MatchId;
		
		private System.Nullable<int> _MapId;
		
		private System.Nullable<long> _MatchCreation;
		
		private System.Nullable<long> _MatchDuration;
		
		private string _MatchMode;
		
		private string _MatchType;
		
		private string _MatchVersion;
		
		private string _ParticipantIdentities;
		
		private string _PlatformId;
		
		private string _QueueType;
		
		private string _Region;
		
		private string _Season;
		
		private EntitySet<Team> _Teams;
		
		private EntitySet<Participant> _Participants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBucketTimeChanging(System.Nullable<int> value);
    partial void OnBucketTimeChanged();
    partial void OnMatchIdChanging(long value);
    partial void OnMatchIdChanged();
    partial void OnMapIdChanging(System.Nullable<int> value);
    partial void OnMapIdChanged();
    partial void OnMatchCreationChanging(System.Nullable<long> value);
    partial void OnMatchCreationChanged();
    partial void OnMatchDurationChanging(System.Nullable<long> value);
    partial void OnMatchDurationChanged();
    partial void OnMatchModeChanging(string value);
    partial void OnMatchModeChanged();
    partial void OnMatchTypeChanging(string value);
    partial void OnMatchTypeChanged();
    partial void OnMatchVersionChanging(string value);
    partial void OnMatchVersionChanged();
    partial void OnParticipantIdentitiesChanging(string value);
    partial void OnParticipantIdentitiesChanged();
    partial void OnPlatformIdChanging(string value);
    partial void OnPlatformIdChanged();
    partial void OnQueueTypeChanging(string value);
    partial void OnQueueTypeChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnSeasonChanging(string value);
    partial void OnSeasonChanged();
    #endregion
		
		public Match()
		{
			this._Teams = new EntitySet<Team>(new Action<Team>(this.attach_Teams), new Action<Team>(this.detach_Teams));
			this._Participants = new EntitySet<Participant>(new Action<Participant>(this.attach_Participants), new Action<Participant>(this.detach_Participants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BucketTime", DbType="Int")]
		public System.Nullable<int> BucketTime
		{
			get
			{
				return this._BucketTime;
			}
			set
			{
				if ((this._BucketTime != value))
				{
					this.OnBucketTimeChanging(value);
					this.SendPropertyChanging();
					this._BucketTime = value;
					this.SendPropertyChanged("BucketTime");
					this.OnBucketTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long MatchId
		{
			get
			{
				return this._MatchId;
			}
			set
			{
				if ((this._MatchId != value))
				{
					this.OnMatchIdChanging(value);
					this.SendPropertyChanging();
					this._MatchId = value;
					this.SendPropertyChanged("MatchId");
					this.OnMatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MapId", DbType="Int")]
		public System.Nullable<int> MapId
		{
			get
			{
				return this._MapId;
			}
			set
			{
				if ((this._MapId != value))
				{
					this.OnMapIdChanging(value);
					this.SendPropertyChanging();
					this._MapId = value;
					this.SendPropertyChanged("MapId");
					this.OnMapIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchCreation", DbType="BigInt")]
		public System.Nullable<long> MatchCreation
		{
			get
			{
				return this._MatchCreation;
			}
			set
			{
				if ((this._MatchCreation != value))
				{
					this.OnMatchCreationChanging(value);
					this.SendPropertyChanging();
					this._MatchCreation = value;
					this.SendPropertyChanged("MatchCreation");
					this.OnMatchCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchDuration", DbType="BigInt")]
		public System.Nullable<long> MatchDuration
		{
			get
			{
				return this._MatchDuration;
			}
			set
			{
				if ((this._MatchDuration != value))
				{
					this.OnMatchDurationChanging(value);
					this.SendPropertyChanging();
					this._MatchDuration = value;
					this.SendPropertyChanged("MatchDuration");
					this.OnMatchDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchMode", DbType="VarChar(50)")]
		public string MatchMode
		{
			get
			{
				return this._MatchMode;
			}
			set
			{
				if ((this._MatchMode != value))
				{
					this.OnMatchModeChanging(value);
					this.SendPropertyChanging();
					this._MatchMode = value;
					this.SendPropertyChanged("MatchMode");
					this.OnMatchModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchType", DbType="VarChar(50)")]
		public string MatchType
		{
			get
			{
				return this._MatchType;
			}
			set
			{
				if ((this._MatchType != value))
				{
					this.OnMatchTypeChanging(value);
					this.SendPropertyChanging();
					this._MatchType = value;
					this.SendPropertyChanged("MatchType");
					this.OnMatchTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchVersion", DbType="VarChar(50)")]
		public string MatchVersion
		{
			get
			{
				return this._MatchVersion;
			}
			set
			{
				if ((this._MatchVersion != value))
				{
					this.OnMatchVersionChanging(value);
					this.SendPropertyChanging();
					this._MatchVersion = value;
					this.SendPropertyChanged("MatchVersion");
					this.OnMatchVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantIdentities", DbType="VarChar(50)")]
		public string ParticipantIdentities
		{
			get
			{
				return this._ParticipantIdentities;
			}
			set
			{
				if ((this._ParticipantIdentities != value))
				{
					this.OnParticipantIdentitiesChanging(value);
					this.SendPropertyChanging();
					this._ParticipantIdentities = value;
					this.SendPropertyChanged("ParticipantIdentities");
					this.OnParticipantIdentitiesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlatformId", DbType="VarChar(50)")]
		public string PlatformId
		{
			get
			{
				return this._PlatformId;
			}
			set
			{
				if ((this._PlatformId != value))
				{
					this.OnPlatformIdChanging(value);
					this.SendPropertyChanging();
					this._PlatformId = value;
					this.SendPropertyChanged("PlatformId");
					this.OnPlatformIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QueueType", DbType="VarChar(50)")]
		public string QueueType
		{
			get
			{
				return this._QueueType;
			}
			set
			{
				if ((this._QueueType != value))
				{
					this.OnQueueTypeChanging(value);
					this.SendPropertyChanging();
					this._QueueType = value;
					this.SendPropertyChanged("QueueType");
					this.OnQueueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="VarChar(50)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Season", DbType="VarChar(50)")]
		public string Season
		{
			get
			{
				return this._Season;
			}
			set
			{
				if ((this._Season != value))
				{
					this.OnSeasonChanging(value);
					this.SendPropertyChanging();
					this._Season = value;
					this.SendPropertyChanged("Season");
					this.OnSeasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Match_Team", Storage="_Teams", ThisKey="MatchId", OtherKey="MatchId")]
		public EntitySet<Team> Teams
		{
			get
			{
				return this._Teams;
			}
			set
			{
				this._Teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Match_Participant", Storage="_Participants", ThisKey="MatchId", OtherKey="MatchId")]
		public EntitySet<Participant> Participants
		{
			get
			{
				return this._Participants;
			}
			set
			{
				this._Participants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.Match = this;
		}
		
		private void detach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.Match = null;
		}
		
		private void attach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Match = this;
		}
		
		private void detach_Participants(Participant entity)
		{
			this.SendPropertyChanging();
			entity.Match = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Team")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<long> _MatchId;
		
		private string _Bans;
		
		private System.Nullable<int> _BaronKills;
		
		private System.Nullable<long> _DominionVictoryScore;
		
		private System.Nullable<int> _DragonKills;
		
		private System.Nullable<bool> _FirstBaron;
		
		private System.Nullable<bool> _FirstBlood;
		
		private System.Nullable<bool> _FirstDragon;
		
		private System.Nullable<bool> _FirstInhibitor;
		
		private System.Nullable<int> _InhibitorKills;
		
		private System.Nullable<int> _TeamId;
		
		private System.Nullable<int> _TowerKills;
		
		private System.Nullable<int> _VilemaxKills;
		
		private System.Nullable<bool> _Winner;
		
		private EntityRef<Match> _Match;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMatchIdChanging(System.Nullable<long> value);
    partial void OnMatchIdChanged();
    partial void OnBansChanging(string value);
    partial void OnBansChanged();
    partial void OnBaronKillsChanging(System.Nullable<int> value);
    partial void OnBaronKillsChanged();
    partial void OnDominionVictoryScoreChanging(System.Nullable<long> value);
    partial void OnDominionVictoryScoreChanged();
    partial void OnDragonKillsChanging(System.Nullable<int> value);
    partial void OnDragonKillsChanged();
    partial void OnFirstBaronChanging(System.Nullable<bool> value);
    partial void OnFirstBaronChanged();
    partial void OnFirstBloodChanging(System.Nullable<bool> value);
    partial void OnFirstBloodChanged();
    partial void OnFirstDragonChanging(System.Nullable<bool> value);
    partial void OnFirstDragonChanged();
    partial void OnFirstInhibitorChanging(System.Nullable<bool> value);
    partial void OnFirstInhibitorChanged();
    partial void OnInhibitorKillsChanging(System.Nullable<int> value);
    partial void OnInhibitorKillsChanged();
    partial void OnTeamIdChanging(System.Nullable<int> value);
    partial void OnTeamIdChanged();
    partial void OnTowerKillsChanging(System.Nullable<int> value);
    partial void OnTowerKillsChanged();
    partial void OnVilemaxKillsChanging(System.Nullable<int> value);
    partial void OnVilemaxKillsChanged();
    partial void OnWinnerChanging(System.Nullable<bool> value);
    partial void OnWinnerChanged();
    #endregion
		
		public Team()
		{
			this._Match = default(EntityRef<Match>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchId", DbType="BigInt")]
		public System.Nullable<long> MatchId
		{
			get
			{
				return this._MatchId;
			}
			set
			{
				if ((this._MatchId != value))
				{
					if (this._Match.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatchIdChanging(value);
					this.SendPropertyChanging();
					this._MatchId = value;
					this.SendPropertyChanged("MatchId");
					this.OnMatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bans", DbType="VarChar(MAX)")]
		public string Bans
		{
			get
			{
				return this._Bans;
			}
			set
			{
				if ((this._Bans != value))
				{
					this.OnBansChanging(value);
					this.SendPropertyChanging();
					this._Bans = value;
					this.SendPropertyChanged("Bans");
					this.OnBansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaronKills", DbType="Int")]
		public System.Nullable<int> BaronKills
		{
			get
			{
				return this._BaronKills;
			}
			set
			{
				if ((this._BaronKills != value))
				{
					this.OnBaronKillsChanging(value);
					this.SendPropertyChanging();
					this._BaronKills = value;
					this.SendPropertyChanged("BaronKills");
					this.OnBaronKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DominionVictoryScore", DbType="BigInt")]
		public System.Nullable<long> DominionVictoryScore
		{
			get
			{
				return this._DominionVictoryScore;
			}
			set
			{
				if ((this._DominionVictoryScore != value))
				{
					this.OnDominionVictoryScoreChanging(value);
					this.SendPropertyChanging();
					this._DominionVictoryScore = value;
					this.SendPropertyChanged("DominionVictoryScore");
					this.OnDominionVictoryScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DragonKills", DbType="Int")]
		public System.Nullable<int> DragonKills
		{
			get
			{
				return this._DragonKills;
			}
			set
			{
				if ((this._DragonKills != value))
				{
					this.OnDragonKillsChanging(value);
					this.SendPropertyChanging();
					this._DragonKills = value;
					this.SendPropertyChanged("DragonKills");
					this.OnDragonKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstBaron", DbType="Bit")]
		public System.Nullable<bool> FirstBaron
		{
			get
			{
				return this._FirstBaron;
			}
			set
			{
				if ((this._FirstBaron != value))
				{
					this.OnFirstBaronChanging(value);
					this.SendPropertyChanging();
					this._FirstBaron = value;
					this.SendPropertyChanged("FirstBaron");
					this.OnFirstBaronChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstBlood", DbType="Bit")]
		public System.Nullable<bool> FirstBlood
		{
			get
			{
				return this._FirstBlood;
			}
			set
			{
				if ((this._FirstBlood != value))
				{
					this.OnFirstBloodChanging(value);
					this.SendPropertyChanging();
					this._FirstBlood = value;
					this.SendPropertyChanged("FirstBlood");
					this.OnFirstBloodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstDragon", DbType="Bit")]
		public System.Nullable<bool> FirstDragon
		{
			get
			{
				return this._FirstDragon;
			}
			set
			{
				if ((this._FirstDragon != value))
				{
					this.OnFirstDragonChanging(value);
					this.SendPropertyChanging();
					this._FirstDragon = value;
					this.SendPropertyChanged("FirstDragon");
					this.OnFirstDragonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstInhibitor", DbType="Bit")]
		public System.Nullable<bool> FirstInhibitor
		{
			get
			{
				return this._FirstInhibitor;
			}
			set
			{
				if ((this._FirstInhibitor != value))
				{
					this.OnFirstInhibitorChanging(value);
					this.SendPropertyChanging();
					this._FirstInhibitor = value;
					this.SendPropertyChanged("FirstInhibitor");
					this.OnFirstInhibitorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InhibitorKills", DbType="Int")]
		public System.Nullable<int> InhibitorKills
		{
			get
			{
				return this._InhibitorKills;
			}
			set
			{
				if ((this._InhibitorKills != value))
				{
					this.OnInhibitorKillsChanging(value);
					this.SendPropertyChanging();
					this._InhibitorKills = value;
					this.SendPropertyChanged("InhibitorKills");
					this.OnInhibitorKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int")]
		public System.Nullable<int> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TowerKills", DbType="Int")]
		public System.Nullable<int> TowerKills
		{
			get
			{
				return this._TowerKills;
			}
			set
			{
				if ((this._TowerKills != value))
				{
					this.OnTowerKillsChanging(value);
					this.SendPropertyChanging();
					this._TowerKills = value;
					this.SendPropertyChanged("TowerKills");
					this.OnTowerKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VilemaxKills", DbType="Int")]
		public System.Nullable<int> VilemaxKills
		{
			get
			{
				return this._VilemaxKills;
			}
			set
			{
				if ((this._VilemaxKills != value))
				{
					this.OnVilemaxKillsChanging(value);
					this.SendPropertyChanging();
					this._VilemaxKills = value;
					this.SendPropertyChanged("VilemaxKills");
					this.OnVilemaxKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Winner", DbType="Bit")]
		public System.Nullable<bool> Winner
		{
			get
			{
				return this._Winner;
			}
			set
			{
				if ((this._Winner != value))
				{
					this.OnWinnerChanging(value);
					this.SendPropertyChanging();
					this._Winner = value;
					this.SendPropertyChanged("Winner");
					this.OnWinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Match_Team", Storage="_Match", ThisKey="MatchId", OtherKey="MatchId", IsForeignKey=true)]
		public Match Match
		{
			get
			{
				return this._Match.Entity;
			}
			set
			{
				Match previousValue = this._Match.Entity;
				if (((previousValue != value) 
							|| (this._Match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Match.Entity = null;
						previousValue.Teams.Remove(this);
					}
					this._Match.Entity = value;
					if ((value != null))
					{
						value.Teams.Add(this);
						this._MatchId = value.MatchId;
					}
					else
					{
						this._MatchId = default(Nullable<long>);
					}
					this.SendPropertyChanged("Match");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Participant")]
	public partial class Participant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _MatchId;
		
		private System.Nullable<int> _ChampionId;
		
		private string _HighestAchievedSeasonTier;
		
		private System.Nullable<int> _Masteries;
		
		private System.Nullable<int> _ParticipantId;
		
		private System.Nullable<int> _Runes;
		
		private System.Nullable<int> _Spell1Id;
		
		private System.Nullable<int> _Spell2Id;
		
		private System.Nullable<int> _Stats;
		
		private System.Nullable<int> _TeamId;
		
		private EntityRef<ParticipantStat> _ParticipantStat;
		
		private EntityRef<Player> _Player;
		
		private EntityRef<Match> _Match;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMatchIdChanging(long value);
    partial void OnMatchIdChanged();
    partial void OnChampionIdChanging(System.Nullable<int> value);
    partial void OnChampionIdChanged();
    partial void OnHighestAchievedSeasonTierChanging(string value);
    partial void OnHighestAchievedSeasonTierChanged();
    partial void OnMasteriesChanging(System.Nullable<int> value);
    partial void OnMasteriesChanged();
    partial void OnParticipantIdChanging(System.Nullable<int> value);
    partial void OnParticipantIdChanged();
    partial void OnRunesChanging(System.Nullable<int> value);
    partial void OnRunesChanged();
    partial void OnSpell1IdChanging(System.Nullable<int> value);
    partial void OnSpell1IdChanged();
    partial void OnSpell2IdChanging(System.Nullable<int> value);
    partial void OnSpell2IdChanged();
    partial void OnStatsChanging(System.Nullable<int> value);
    partial void OnStatsChanged();
    partial void OnTeamIdChanging(System.Nullable<int> value);
    partial void OnTeamIdChanged();
    #endregion
		
		public Participant()
		{
			this._ParticipantStat = default(EntityRef<ParticipantStat>);
			this._Player = default(EntityRef<Player>);
			this._Match = default(EntityRef<Match>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchId", DbType="BigInt NOT NULL")]
		public long MatchId
		{
			get
			{
				return this._MatchId;
			}
			set
			{
				if ((this._MatchId != value))
				{
					if (this._Match.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatchIdChanging(value);
					this.SendPropertyChanging();
					this._MatchId = value;
					this.SendPropertyChanged("MatchId");
					this.OnMatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChampionId", DbType="Int")]
		public System.Nullable<int> ChampionId
		{
			get
			{
				return this._ChampionId;
			}
			set
			{
				if ((this._ChampionId != value))
				{
					this.OnChampionIdChanging(value);
					this.SendPropertyChanging();
					this._ChampionId = value;
					this.SendPropertyChanged("ChampionId");
					this.OnChampionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighestAchievedSeasonTier", DbType="VarChar(MAX)")]
		public string HighestAchievedSeasonTier
		{
			get
			{
				return this._HighestAchievedSeasonTier;
			}
			set
			{
				if ((this._HighestAchievedSeasonTier != value))
				{
					this.OnHighestAchievedSeasonTierChanging(value);
					this.SendPropertyChanging();
					this._HighestAchievedSeasonTier = value;
					this.SendPropertyChanged("HighestAchievedSeasonTier");
					this.OnHighestAchievedSeasonTierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Masteries", DbType="Int")]
		public System.Nullable<int> Masteries
		{
			get
			{
				return this._Masteries;
			}
			set
			{
				if ((this._Masteries != value))
				{
					this.OnMasteriesChanging(value);
					this.SendPropertyChanging();
					this._Masteries = value;
					this.SendPropertyChanged("Masteries");
					this.OnMasteriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="Int")]
		public System.Nullable<int> ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Runes", DbType="Int")]
		public System.Nullable<int> Runes
		{
			get
			{
				return this._Runes;
			}
			set
			{
				if ((this._Runes != value))
				{
					this.OnRunesChanging(value);
					this.SendPropertyChanging();
					this._Runes = value;
					this.SendPropertyChanged("Runes");
					this.OnRunesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spell1Id", DbType="Int")]
		public System.Nullable<int> Spell1Id
		{
			get
			{
				return this._Spell1Id;
			}
			set
			{
				if ((this._Spell1Id != value))
				{
					this.OnSpell1IdChanging(value);
					this.SendPropertyChanging();
					this._Spell1Id = value;
					this.SendPropertyChanged("Spell1Id");
					this.OnSpell1IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spell2Id", DbType="Int")]
		public System.Nullable<int> Spell2Id
		{
			get
			{
				return this._Spell2Id;
			}
			set
			{
				if ((this._Spell2Id != value))
				{
					this.OnSpell2IdChanging(value);
					this.SendPropertyChanging();
					this._Spell2Id = value;
					this.SendPropertyChanged("Spell2Id");
					this.OnSpell2IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stats", DbType="Int")]
		public System.Nullable<int> Stats
		{
			get
			{
				return this._Stats;
			}
			set
			{
				if ((this._Stats != value))
				{
					this.OnStatsChanging(value);
					this.SendPropertyChanging();
					this._Stats = value;
					this.SendPropertyChanged("Stats");
					this.OnStatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="Int")]
		public System.Nullable<int> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participant_ParticipantStat", Storage="_ParticipantStat", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public ParticipantStat ParticipantStat
		{
			get
			{
				return this._ParticipantStat.Entity;
			}
			set
			{
				ParticipantStat previousValue = this._ParticipantStat.Entity;
				if (((previousValue != value) 
							|| (this._ParticipantStat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParticipantStat.Entity = null;
						previousValue.Participant = null;
					}
					this._ParticipantStat.Entity = value;
					if ((value != null))
					{
						value.Participant = this;
					}
					this.SendPropertyChanged("ParticipantStat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participant_Player", Storage="_Player", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Player Player
		{
			get
			{
				return this._Player.Entity;
			}
			set
			{
				Player previousValue = this._Player.Entity;
				if (((previousValue != value) 
							|| (this._Player.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Player.Entity = null;
						previousValue.Participant = null;
					}
					this._Player.Entity = value;
					if ((value != null))
					{
						value.Participant = this;
					}
					this.SendPropertyChanged("Player");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Match_Participant", Storage="_Match", ThisKey="MatchId", OtherKey="MatchId", IsForeignKey=true)]
		public Match Match
		{
			get
			{
				return this._Match.Entity;
			}
			set
			{
				Match previousValue = this._Match.Entity;
				if (((previousValue != value) 
							|| (this._Match.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Match.Entity = null;
						previousValue.Participants.Remove(this);
					}
					this._Match.Entity = value;
					if ((value != null))
					{
						value.Participants.Add(this);
						this._MatchId = value.MatchId;
					}
					else
					{
						this._MatchId = default(long);
					}
					this.SendPropertyChanged("Match");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParticipantStats")]
	public partial class ParticipantStat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<long> _Assists;
		
		private System.Nullable<long> _ChampLevel;
		
		private System.Nullable<long> _CombatPlayerScore;
		
		private System.Nullable<long> _Deaths;
		
		private System.Nullable<long> _DoubleKills;
		
		private System.Nullable<bool> _FirstBloodAssist;
		
		private System.Nullable<bool> _FirstBloodKill;
		
		private System.Nullable<bool> _FirstInhibitorAssist;
		
		private System.Nullable<bool> _FirsInhibitorKill;
		
		private System.Nullable<bool> _FirstTowerAssist;
		
		private System.Nullable<bool> _FirstTowerKill;
		
		private System.Nullable<long> _GoldEarned;
		
		private System.Nullable<long> _GoldSpent;
		
		private System.Nullable<long> _InhibitorKills;
		
		private System.Nullable<long> _Item0;
		
		private System.Nullable<long> _Item1;
		
		private System.Nullable<long> _Item2;
		
		private System.Nullable<long> _Item3;
		
		private System.Nullable<long> _Item4;
		
		private System.Nullable<long> _Item5;
		
		private System.Nullable<long> _Item6;
		
		private System.Nullable<long> _KillingSprees;
		
		private System.Nullable<long> _Kills;
		
		private System.Nullable<long> _LargestCriticalStrike;
		
		private System.Nullable<long> _LargestKillingSpree;
		
		private System.Nullable<long> _LargestMultiKill;
		
		private System.Nullable<long> _MagicDamageDealt;
		
		private System.Nullable<long> _MagicDamageDealtToChampions;
		
		private System.Nullable<long> _MagicDamageTaken;
		
		private System.Nullable<long> _MinionsKilled;
		
		private System.Nullable<long> _NeutralMinionsKilled;
		
		private System.Nullable<long> _NeutralMinionsKilledEnemyJungle;
		
		private System.Nullable<long> _NeutralMinionsKilledTeamJungle;
		
		private System.Nullable<long> _NodeCapture;
		
		private System.Nullable<long> _NodeCaptureAssist;
		
		private System.Nullable<long> _NodeNeutralize;
		
		private System.Nullable<long> _NodeNeutralizeAssist;
		
		private System.Nullable<long> _ObjectivePlayerScore;
		
		private System.Nullable<long> _PentaKills;
		
		private System.Nullable<long> _PhysicalDamageDealt;
		
		private System.Nullable<long> _PhysicalDamageDealtToChampions;
		
		private System.Nullable<long> _PhysicalDamageTaken;
		
		private System.Nullable<long> _QuadraKills;
		
		private System.Nullable<long> _SightWardsBoughtInGame;
		
		private System.Nullable<long> _TeamObjective;
		
		private System.Nullable<long> _TotalDamageDealt;
		
		private System.Nullable<long> _TotalDamageDealtToChampions;
		
		private System.Nullable<long> _TotalDamageTaken;
		
		private System.Nullable<long> _TotalHeal;
		
		private System.Nullable<long> _TotalPlayerScore;
		
		private System.Nullable<long> _TotalScoreRank;
		
		private System.Nullable<long> _TotalTimeCrowdControlDealt;
		
		private System.Nullable<long> _TotalUnitsHealed;
		
		private System.Nullable<long> _TowerKills;
		
		private System.Nullable<long> _TripleKills;
		
		private System.Nullable<long> _TrueDamageDealt;
		
		private System.Nullable<long> _TrueDamageDealtToChampions;
		
		private System.Nullable<long> _TrueDamageTaken;
		
		private System.Nullable<long> _UnrealKills;
		
		private System.Nullable<long> _VisionWardsBoughtInGame;
		
		private System.Nullable<long> _WardsKilled;
		
		private System.Nullable<long> _WardsPlaced;
		
		private System.Nullable<bool> _Winner;
		
		private EntityRef<Participant> _Participant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAssistsChanging(System.Nullable<long> value);
    partial void OnAssistsChanged();
    partial void OnChampLevelChanging(System.Nullable<long> value);
    partial void OnChampLevelChanged();
    partial void OnCombatPlayerScoreChanging(System.Nullable<long> value);
    partial void OnCombatPlayerScoreChanged();
    partial void OnDeathsChanging(System.Nullable<long> value);
    partial void OnDeathsChanged();
    partial void OnDoubleKillsChanging(System.Nullable<long> value);
    partial void OnDoubleKillsChanged();
    partial void OnFirstBloodAssistChanging(System.Nullable<bool> value);
    partial void OnFirstBloodAssistChanged();
    partial void OnFirstBloodKillChanging(System.Nullable<bool> value);
    partial void OnFirstBloodKillChanged();
    partial void OnFirstInhibitorAssistChanging(System.Nullable<bool> value);
    partial void OnFirstInhibitorAssistChanged();
    partial void OnFirsInhibitorKillChanging(System.Nullable<bool> value);
    partial void OnFirsInhibitorKillChanged();
    partial void OnFirstTowerAssistChanging(System.Nullable<bool> value);
    partial void OnFirstTowerAssistChanged();
    partial void OnFirstTowerKillChanging(System.Nullable<bool> value);
    partial void OnFirstTowerKillChanged();
    partial void OnGoldEarnedChanging(System.Nullable<long> value);
    partial void OnGoldEarnedChanged();
    partial void OnGoldSpentChanging(System.Nullable<long> value);
    partial void OnGoldSpentChanged();
    partial void OnInhibitorKillsChanging(System.Nullable<long> value);
    partial void OnInhibitorKillsChanged();
    partial void OnItem0Changing(System.Nullable<long> value);
    partial void OnItem0Changed();
    partial void OnItem1Changing(System.Nullable<long> value);
    partial void OnItem1Changed();
    partial void OnItem2Changing(System.Nullable<long> value);
    partial void OnItem2Changed();
    partial void OnItem3Changing(System.Nullable<long> value);
    partial void OnItem3Changed();
    partial void OnItem4Changing(System.Nullable<long> value);
    partial void OnItem4Changed();
    partial void OnItem5Changing(System.Nullable<long> value);
    partial void OnItem5Changed();
    partial void OnItem6Changing(System.Nullable<long> value);
    partial void OnItem6Changed();
    partial void OnKillingSpreesChanging(System.Nullable<long> value);
    partial void OnKillingSpreesChanged();
    partial void OnKillsChanging(System.Nullable<long> value);
    partial void OnKillsChanged();
    partial void OnLargestCriticalStrikeChanging(System.Nullable<long> value);
    partial void OnLargestCriticalStrikeChanged();
    partial void OnLargestKillingSpreeChanging(System.Nullable<long> value);
    partial void OnLargestKillingSpreeChanged();
    partial void OnLargestMultiKillChanging(System.Nullable<long> value);
    partial void OnLargestMultiKillChanged();
    partial void OnMagicDamageDealtChanging(System.Nullable<long> value);
    partial void OnMagicDamageDealtChanged();
    partial void OnMagicDamageDealtToChampionsChanging(System.Nullable<long> value);
    partial void OnMagicDamageDealtToChampionsChanged();
    partial void OnMagicDamageTakenChanging(System.Nullable<long> value);
    partial void OnMagicDamageTakenChanged();
    partial void OnMinionsKilledChanging(System.Nullable<long> value);
    partial void OnMinionsKilledChanged();
    partial void OnNeutralMinionsKilledChanging(System.Nullable<long> value);
    partial void OnNeutralMinionsKilledChanged();
    partial void OnNeutralMinionsKilledEnemyJungleChanging(System.Nullable<long> value);
    partial void OnNeutralMinionsKilledEnemyJungleChanged();
    partial void OnNeutralMinionsKilledTeamJungleChanging(System.Nullable<long> value);
    partial void OnNeutralMinionsKilledTeamJungleChanged();
    partial void OnNodeCaptureChanging(System.Nullable<long> value);
    partial void OnNodeCaptureChanged();
    partial void OnNodeCaptureAssistChanging(System.Nullable<long> value);
    partial void OnNodeCaptureAssistChanged();
    partial void OnNodeNeutralizeChanging(System.Nullable<long> value);
    partial void OnNodeNeutralizeChanged();
    partial void OnNodeNeutralizeAssistChanging(System.Nullable<long> value);
    partial void OnNodeNeutralizeAssistChanged();
    partial void OnObjectivePlayerScoreChanging(System.Nullable<long> value);
    partial void OnObjectivePlayerScoreChanged();
    partial void OnPentaKillsChanging(System.Nullable<long> value);
    partial void OnPentaKillsChanged();
    partial void OnPhysicalDamageDealtChanging(System.Nullable<long> value);
    partial void OnPhysicalDamageDealtChanged();
    partial void OnPhysicalDamageDealtToChampionsChanging(System.Nullable<long> value);
    partial void OnPhysicalDamageDealtToChampionsChanged();
    partial void OnPhysicalDamageTakenChanging(System.Nullable<long> value);
    partial void OnPhysicalDamageTakenChanged();
    partial void OnQuadraKillsChanging(System.Nullable<long> value);
    partial void OnQuadraKillsChanged();
    partial void OnSightWardsBoughtInGameChanging(System.Nullable<long> value);
    partial void OnSightWardsBoughtInGameChanged();
    partial void OnTeamObjectiveChanging(System.Nullable<long> value);
    partial void OnTeamObjectiveChanged();
    partial void OnTotalDamageDealtChanging(System.Nullable<long> value);
    partial void OnTotalDamageDealtChanged();
    partial void OnTotalDamageDealtToChampionsChanging(System.Nullable<long> value);
    partial void OnTotalDamageDealtToChampionsChanged();
    partial void OnTotalDamageTakenChanging(System.Nullable<long> value);
    partial void OnTotalDamageTakenChanged();
    partial void OnTotalHealChanging(System.Nullable<long> value);
    partial void OnTotalHealChanged();
    partial void OnTotalPlayerScoreChanging(System.Nullable<long> value);
    partial void OnTotalPlayerScoreChanged();
    partial void OnTotalScoreRankChanging(System.Nullable<long> value);
    partial void OnTotalScoreRankChanged();
    partial void OnTotalTimeCrowdControlDealtChanging(System.Nullable<long> value);
    partial void OnTotalTimeCrowdControlDealtChanged();
    partial void OnTotalUnitsHealedChanging(System.Nullable<long> value);
    partial void OnTotalUnitsHealedChanged();
    partial void OnTowerKillsChanging(System.Nullable<long> value);
    partial void OnTowerKillsChanged();
    partial void OnTripleKillsChanging(System.Nullable<long> value);
    partial void OnTripleKillsChanged();
    partial void OnTrueDamageDealtChanging(System.Nullable<long> value);
    partial void OnTrueDamageDealtChanged();
    partial void OnTrueDamageDealtToChampionsChanging(System.Nullable<long> value);
    partial void OnTrueDamageDealtToChampionsChanged();
    partial void OnTrueDamageTakenChanging(System.Nullable<long> value);
    partial void OnTrueDamageTakenChanged();
    partial void OnUnrealKillsChanging(System.Nullable<long> value);
    partial void OnUnrealKillsChanged();
    partial void OnVisionWardsBoughtInGameChanging(System.Nullable<long> value);
    partial void OnVisionWardsBoughtInGameChanged();
    partial void OnWardsKilledChanging(System.Nullable<long> value);
    partial void OnWardsKilledChanged();
    partial void OnWardsPlacedChanging(System.Nullable<long> value);
    partial void OnWardsPlacedChanged();
    partial void OnWinnerChanging(System.Nullable<bool> value);
    partial void OnWinnerChanged();
    #endregion
		
		public ParticipantStat()
		{
			this._Participant = default(EntityRef<Participant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Participant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assists", DbType="BigInt")]
		public System.Nullable<long> Assists
		{
			get
			{
				return this._Assists;
			}
			set
			{
				if ((this._Assists != value))
				{
					this.OnAssistsChanging(value);
					this.SendPropertyChanging();
					this._Assists = value;
					this.SendPropertyChanged("Assists");
					this.OnAssistsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChampLevel", DbType="BigInt")]
		public System.Nullable<long> ChampLevel
		{
			get
			{
				return this._ChampLevel;
			}
			set
			{
				if ((this._ChampLevel != value))
				{
					this.OnChampLevelChanging(value);
					this.SendPropertyChanging();
					this._ChampLevel = value;
					this.SendPropertyChanged("ChampLevel");
					this.OnChampLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombatPlayerScore", DbType="BigInt")]
		public System.Nullable<long> CombatPlayerScore
		{
			get
			{
				return this._CombatPlayerScore;
			}
			set
			{
				if ((this._CombatPlayerScore != value))
				{
					this.OnCombatPlayerScoreChanging(value);
					this.SendPropertyChanging();
					this._CombatPlayerScore = value;
					this.SendPropertyChanged("CombatPlayerScore");
					this.OnCombatPlayerScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deaths", DbType="BigInt")]
		public System.Nullable<long> Deaths
		{
			get
			{
				return this._Deaths;
			}
			set
			{
				if ((this._Deaths != value))
				{
					this.OnDeathsChanging(value);
					this.SendPropertyChanging();
					this._Deaths = value;
					this.SendPropertyChanged("Deaths");
					this.OnDeathsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoubleKills", DbType="BigInt")]
		public System.Nullable<long> DoubleKills
		{
			get
			{
				return this._DoubleKills;
			}
			set
			{
				if ((this._DoubleKills != value))
				{
					this.OnDoubleKillsChanging(value);
					this.SendPropertyChanging();
					this._DoubleKills = value;
					this.SendPropertyChanged("DoubleKills");
					this.OnDoubleKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstBloodAssist", DbType="Bit")]
		public System.Nullable<bool> FirstBloodAssist
		{
			get
			{
				return this._FirstBloodAssist;
			}
			set
			{
				if ((this._FirstBloodAssist != value))
				{
					this.OnFirstBloodAssistChanging(value);
					this.SendPropertyChanging();
					this._FirstBloodAssist = value;
					this.SendPropertyChanged("FirstBloodAssist");
					this.OnFirstBloodAssistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstBloodKill", DbType="Bit")]
		public System.Nullable<bool> FirstBloodKill
		{
			get
			{
				return this._FirstBloodKill;
			}
			set
			{
				if ((this._FirstBloodKill != value))
				{
					this.OnFirstBloodKillChanging(value);
					this.SendPropertyChanging();
					this._FirstBloodKill = value;
					this.SendPropertyChanged("FirstBloodKill");
					this.OnFirstBloodKillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstInhibitorAssist", DbType="Bit")]
		public System.Nullable<bool> FirstInhibitorAssist
		{
			get
			{
				return this._FirstInhibitorAssist;
			}
			set
			{
				if ((this._FirstInhibitorAssist != value))
				{
					this.OnFirstInhibitorAssistChanging(value);
					this.SendPropertyChanging();
					this._FirstInhibitorAssist = value;
					this.SendPropertyChanged("FirstInhibitorAssist");
					this.OnFirstInhibitorAssistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirsInhibitorKill", DbType="Bit")]
		public System.Nullable<bool> FirsInhibitorKill
		{
			get
			{
				return this._FirsInhibitorKill;
			}
			set
			{
				if ((this._FirsInhibitorKill != value))
				{
					this.OnFirsInhibitorKillChanging(value);
					this.SendPropertyChanging();
					this._FirsInhibitorKill = value;
					this.SendPropertyChanged("FirsInhibitorKill");
					this.OnFirsInhibitorKillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstTowerAssist", DbType="Bit")]
		public System.Nullable<bool> FirstTowerAssist
		{
			get
			{
				return this._FirstTowerAssist;
			}
			set
			{
				if ((this._FirstTowerAssist != value))
				{
					this.OnFirstTowerAssistChanging(value);
					this.SendPropertyChanging();
					this._FirstTowerAssist = value;
					this.SendPropertyChanged("FirstTowerAssist");
					this.OnFirstTowerAssistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstTowerKill", DbType="Bit")]
		public System.Nullable<bool> FirstTowerKill
		{
			get
			{
				return this._FirstTowerKill;
			}
			set
			{
				if ((this._FirstTowerKill != value))
				{
					this.OnFirstTowerKillChanging(value);
					this.SendPropertyChanging();
					this._FirstTowerKill = value;
					this.SendPropertyChanged("FirstTowerKill");
					this.OnFirstTowerKillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoldEarned", DbType="BigInt")]
		public System.Nullable<long> GoldEarned
		{
			get
			{
				return this._GoldEarned;
			}
			set
			{
				if ((this._GoldEarned != value))
				{
					this.OnGoldEarnedChanging(value);
					this.SendPropertyChanging();
					this._GoldEarned = value;
					this.SendPropertyChanged("GoldEarned");
					this.OnGoldEarnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoldSpent", DbType="BigInt")]
		public System.Nullable<long> GoldSpent
		{
			get
			{
				return this._GoldSpent;
			}
			set
			{
				if ((this._GoldSpent != value))
				{
					this.OnGoldSpentChanging(value);
					this.SendPropertyChanging();
					this._GoldSpent = value;
					this.SendPropertyChanged("GoldSpent");
					this.OnGoldSpentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InhibitorKills", DbType="BigInt")]
		public System.Nullable<long> InhibitorKills
		{
			get
			{
				return this._InhibitorKills;
			}
			set
			{
				if ((this._InhibitorKills != value))
				{
					this.OnInhibitorKillsChanging(value);
					this.SendPropertyChanging();
					this._InhibitorKills = value;
					this.SendPropertyChanged("InhibitorKills");
					this.OnInhibitorKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item0", DbType="BigInt")]
		public System.Nullable<long> Item0
		{
			get
			{
				return this._Item0;
			}
			set
			{
				if ((this._Item0 != value))
				{
					this.OnItem0Changing(value);
					this.SendPropertyChanging();
					this._Item0 = value;
					this.SendPropertyChanged("Item0");
					this.OnItem0Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item1", DbType="BigInt")]
		public System.Nullable<long> Item1
		{
			get
			{
				return this._Item1;
			}
			set
			{
				if ((this._Item1 != value))
				{
					this.OnItem1Changing(value);
					this.SendPropertyChanging();
					this._Item1 = value;
					this.SendPropertyChanged("Item1");
					this.OnItem1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item2", DbType="BigInt")]
		public System.Nullable<long> Item2
		{
			get
			{
				return this._Item2;
			}
			set
			{
				if ((this._Item2 != value))
				{
					this.OnItem2Changing(value);
					this.SendPropertyChanging();
					this._Item2 = value;
					this.SendPropertyChanged("Item2");
					this.OnItem2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item3", DbType="BigInt")]
		public System.Nullable<long> Item3
		{
			get
			{
				return this._Item3;
			}
			set
			{
				if ((this._Item3 != value))
				{
					this.OnItem3Changing(value);
					this.SendPropertyChanging();
					this._Item3 = value;
					this.SendPropertyChanged("Item3");
					this.OnItem3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item4", DbType="BigInt")]
		public System.Nullable<long> Item4
		{
			get
			{
				return this._Item4;
			}
			set
			{
				if ((this._Item4 != value))
				{
					this.OnItem4Changing(value);
					this.SendPropertyChanging();
					this._Item4 = value;
					this.SendPropertyChanged("Item4");
					this.OnItem4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item5", DbType="BigInt")]
		public System.Nullable<long> Item5
		{
			get
			{
				return this._Item5;
			}
			set
			{
				if ((this._Item5 != value))
				{
					this.OnItem5Changing(value);
					this.SendPropertyChanging();
					this._Item5 = value;
					this.SendPropertyChanged("Item5");
					this.OnItem5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item6", DbType="BigInt")]
		public System.Nullable<long> Item6
		{
			get
			{
				return this._Item6;
			}
			set
			{
				if ((this._Item6 != value))
				{
					this.OnItem6Changing(value);
					this.SendPropertyChanging();
					this._Item6 = value;
					this.SendPropertyChanged("Item6");
					this.OnItem6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KillingSprees", DbType="BigInt")]
		public System.Nullable<long> KillingSprees
		{
			get
			{
				return this._KillingSprees;
			}
			set
			{
				if ((this._KillingSprees != value))
				{
					this.OnKillingSpreesChanging(value);
					this.SendPropertyChanging();
					this._KillingSprees = value;
					this.SendPropertyChanged("KillingSprees");
					this.OnKillingSpreesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kills", DbType="BigInt")]
		public System.Nullable<long> Kills
		{
			get
			{
				return this._Kills;
			}
			set
			{
				if ((this._Kills != value))
				{
					this.OnKillsChanging(value);
					this.SendPropertyChanging();
					this._Kills = value;
					this.SendPropertyChanged("Kills");
					this.OnKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargestCriticalStrike", DbType="BigInt")]
		public System.Nullable<long> LargestCriticalStrike
		{
			get
			{
				return this._LargestCriticalStrike;
			}
			set
			{
				if ((this._LargestCriticalStrike != value))
				{
					this.OnLargestCriticalStrikeChanging(value);
					this.SendPropertyChanging();
					this._LargestCriticalStrike = value;
					this.SendPropertyChanged("LargestCriticalStrike");
					this.OnLargestCriticalStrikeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargestKillingSpree", DbType="BigInt")]
		public System.Nullable<long> LargestKillingSpree
		{
			get
			{
				return this._LargestKillingSpree;
			}
			set
			{
				if ((this._LargestKillingSpree != value))
				{
					this.OnLargestKillingSpreeChanging(value);
					this.SendPropertyChanging();
					this._LargestKillingSpree = value;
					this.SendPropertyChanged("LargestKillingSpree");
					this.OnLargestKillingSpreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargestMultiKill", DbType="BigInt")]
		public System.Nullable<long> LargestMultiKill
		{
			get
			{
				return this._LargestMultiKill;
			}
			set
			{
				if ((this._LargestMultiKill != value))
				{
					this.OnLargestMultiKillChanging(value);
					this.SendPropertyChanging();
					this._LargestMultiKill = value;
					this.SendPropertyChanged("LargestMultiKill");
					this.OnLargestMultiKillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagicDamageDealt", DbType="BigInt")]
		public System.Nullable<long> MagicDamageDealt
		{
			get
			{
				return this._MagicDamageDealt;
			}
			set
			{
				if ((this._MagicDamageDealt != value))
				{
					this.OnMagicDamageDealtChanging(value);
					this.SendPropertyChanging();
					this._MagicDamageDealt = value;
					this.SendPropertyChanged("MagicDamageDealt");
					this.OnMagicDamageDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagicDamageDealtToChampions", DbType="BigInt")]
		public System.Nullable<long> MagicDamageDealtToChampions
		{
			get
			{
				return this._MagicDamageDealtToChampions;
			}
			set
			{
				if ((this._MagicDamageDealtToChampions != value))
				{
					this.OnMagicDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._MagicDamageDealtToChampions = value;
					this.SendPropertyChanged("MagicDamageDealtToChampions");
					this.OnMagicDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagicDamageTaken", DbType="BigInt")]
		public System.Nullable<long> MagicDamageTaken
		{
			get
			{
				return this._MagicDamageTaken;
			}
			set
			{
				if ((this._MagicDamageTaken != value))
				{
					this.OnMagicDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._MagicDamageTaken = value;
					this.SendPropertyChanged("MagicDamageTaken");
					this.OnMagicDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinionsKilled", DbType="BigInt")]
		public System.Nullable<long> MinionsKilled
		{
			get
			{
				return this._MinionsKilled;
			}
			set
			{
				if ((this._MinionsKilled != value))
				{
					this.OnMinionsKilledChanging(value);
					this.SendPropertyChanging();
					this._MinionsKilled = value;
					this.SendPropertyChanged("MinionsKilled");
					this.OnMinionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeutralMinionsKilled", DbType="BigInt")]
		public System.Nullable<long> NeutralMinionsKilled
		{
			get
			{
				return this._NeutralMinionsKilled;
			}
			set
			{
				if ((this._NeutralMinionsKilled != value))
				{
					this.OnNeutralMinionsKilledChanging(value);
					this.SendPropertyChanging();
					this._NeutralMinionsKilled = value;
					this.SendPropertyChanged("NeutralMinionsKilled");
					this.OnNeutralMinionsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeutralMinionsKilledEnemyJungle", DbType="BigInt")]
		public System.Nullable<long> NeutralMinionsKilledEnemyJungle
		{
			get
			{
				return this._NeutralMinionsKilledEnemyJungle;
			}
			set
			{
				if ((this._NeutralMinionsKilledEnemyJungle != value))
				{
					this.OnNeutralMinionsKilledEnemyJungleChanging(value);
					this.SendPropertyChanging();
					this._NeutralMinionsKilledEnemyJungle = value;
					this.SendPropertyChanged("NeutralMinionsKilledEnemyJungle");
					this.OnNeutralMinionsKilledEnemyJungleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeutralMinionsKilledTeamJungle", DbType="BigInt")]
		public System.Nullable<long> NeutralMinionsKilledTeamJungle
		{
			get
			{
				return this._NeutralMinionsKilledTeamJungle;
			}
			set
			{
				if ((this._NeutralMinionsKilledTeamJungle != value))
				{
					this.OnNeutralMinionsKilledTeamJungleChanging(value);
					this.SendPropertyChanging();
					this._NeutralMinionsKilledTeamJungle = value;
					this.SendPropertyChanged("NeutralMinionsKilledTeamJungle");
					this.OnNeutralMinionsKilledTeamJungleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeCapture", DbType="BigInt")]
		public System.Nullable<long> NodeCapture
		{
			get
			{
				return this._NodeCapture;
			}
			set
			{
				if ((this._NodeCapture != value))
				{
					this.OnNodeCaptureChanging(value);
					this.SendPropertyChanging();
					this._NodeCapture = value;
					this.SendPropertyChanged("NodeCapture");
					this.OnNodeCaptureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeCaptureAssist", DbType="BigInt")]
		public System.Nullable<long> NodeCaptureAssist
		{
			get
			{
				return this._NodeCaptureAssist;
			}
			set
			{
				if ((this._NodeCaptureAssist != value))
				{
					this.OnNodeCaptureAssistChanging(value);
					this.SendPropertyChanging();
					this._NodeCaptureAssist = value;
					this.SendPropertyChanged("NodeCaptureAssist");
					this.OnNodeCaptureAssistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeNeutralize", DbType="BigInt")]
		public System.Nullable<long> NodeNeutralize
		{
			get
			{
				return this._NodeNeutralize;
			}
			set
			{
				if ((this._NodeNeutralize != value))
				{
					this.OnNodeNeutralizeChanging(value);
					this.SendPropertyChanging();
					this._NodeNeutralize = value;
					this.SendPropertyChanged("NodeNeutralize");
					this.OnNodeNeutralizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeNeutralizeAssist", DbType="BigInt")]
		public System.Nullable<long> NodeNeutralizeAssist
		{
			get
			{
				return this._NodeNeutralizeAssist;
			}
			set
			{
				if ((this._NodeNeutralizeAssist != value))
				{
					this.OnNodeNeutralizeAssistChanging(value);
					this.SendPropertyChanging();
					this._NodeNeutralizeAssist = value;
					this.SendPropertyChanged("NodeNeutralizeAssist");
					this.OnNodeNeutralizeAssistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectivePlayerScore", DbType="BigInt")]
		public System.Nullable<long> ObjectivePlayerScore
		{
			get
			{
				return this._ObjectivePlayerScore;
			}
			set
			{
				if ((this._ObjectivePlayerScore != value))
				{
					this.OnObjectivePlayerScoreChanging(value);
					this.SendPropertyChanging();
					this._ObjectivePlayerScore = value;
					this.SendPropertyChanged("ObjectivePlayerScore");
					this.OnObjectivePlayerScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PentaKills", DbType="BigInt")]
		public System.Nullable<long> PentaKills
		{
			get
			{
				return this._PentaKills;
			}
			set
			{
				if ((this._PentaKills != value))
				{
					this.OnPentaKillsChanging(value);
					this.SendPropertyChanging();
					this._PentaKills = value;
					this.SendPropertyChanged("PentaKills");
					this.OnPentaKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalDamageDealt", DbType="BigInt")]
		public System.Nullable<long> PhysicalDamageDealt
		{
			get
			{
				return this._PhysicalDamageDealt;
			}
			set
			{
				if ((this._PhysicalDamageDealt != value))
				{
					this.OnPhysicalDamageDealtChanging(value);
					this.SendPropertyChanging();
					this._PhysicalDamageDealt = value;
					this.SendPropertyChanged("PhysicalDamageDealt");
					this.OnPhysicalDamageDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalDamageDealtToChampions", DbType="BigInt")]
		public System.Nullable<long> PhysicalDamageDealtToChampions
		{
			get
			{
				return this._PhysicalDamageDealtToChampions;
			}
			set
			{
				if ((this._PhysicalDamageDealtToChampions != value))
				{
					this.OnPhysicalDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._PhysicalDamageDealtToChampions = value;
					this.SendPropertyChanged("PhysicalDamageDealtToChampions");
					this.OnPhysicalDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalDamageTaken", DbType="BigInt")]
		public System.Nullable<long> PhysicalDamageTaken
		{
			get
			{
				return this._PhysicalDamageTaken;
			}
			set
			{
				if ((this._PhysicalDamageTaken != value))
				{
					this.OnPhysicalDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._PhysicalDamageTaken = value;
					this.SendPropertyChanged("PhysicalDamageTaken");
					this.OnPhysicalDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuadraKills", DbType="BigInt")]
		public System.Nullable<long> QuadraKills
		{
			get
			{
				return this._QuadraKills;
			}
			set
			{
				if ((this._QuadraKills != value))
				{
					this.OnQuadraKillsChanging(value);
					this.SendPropertyChanging();
					this._QuadraKills = value;
					this.SendPropertyChanged("QuadraKills");
					this.OnQuadraKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SightWardsBoughtInGame", DbType="BigInt")]
		public System.Nullable<long> SightWardsBoughtInGame
		{
			get
			{
				return this._SightWardsBoughtInGame;
			}
			set
			{
				if ((this._SightWardsBoughtInGame != value))
				{
					this.OnSightWardsBoughtInGameChanging(value);
					this.SendPropertyChanging();
					this._SightWardsBoughtInGame = value;
					this.SendPropertyChanged("SightWardsBoughtInGame");
					this.OnSightWardsBoughtInGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamObjective", DbType="BigInt")]
		public System.Nullable<long> TeamObjective
		{
			get
			{
				return this._TeamObjective;
			}
			set
			{
				if ((this._TeamObjective != value))
				{
					this.OnTeamObjectiveChanging(value);
					this.SendPropertyChanging();
					this._TeamObjective = value;
					this.SendPropertyChanged("TeamObjective");
					this.OnTeamObjectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDamageDealt", DbType="BigInt")]
		public System.Nullable<long> TotalDamageDealt
		{
			get
			{
				return this._TotalDamageDealt;
			}
			set
			{
				if ((this._TotalDamageDealt != value))
				{
					this.OnTotalDamageDealtChanging(value);
					this.SendPropertyChanging();
					this._TotalDamageDealt = value;
					this.SendPropertyChanged("TotalDamageDealt");
					this.OnTotalDamageDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDamageDealtToChampions", DbType="BigInt")]
		public System.Nullable<long> TotalDamageDealtToChampions
		{
			get
			{
				return this._TotalDamageDealtToChampions;
			}
			set
			{
				if ((this._TotalDamageDealtToChampions != value))
				{
					this.OnTotalDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._TotalDamageDealtToChampions = value;
					this.SendPropertyChanged("TotalDamageDealtToChampions");
					this.OnTotalDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDamageTaken", DbType="BigInt")]
		public System.Nullable<long> TotalDamageTaken
		{
			get
			{
				return this._TotalDamageTaken;
			}
			set
			{
				if ((this._TotalDamageTaken != value))
				{
					this.OnTotalDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._TotalDamageTaken = value;
					this.SendPropertyChanged("TotalDamageTaken");
					this.OnTotalDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalHeal", DbType="BigInt")]
		public System.Nullable<long> TotalHeal
		{
			get
			{
				return this._TotalHeal;
			}
			set
			{
				if ((this._TotalHeal != value))
				{
					this.OnTotalHealChanging(value);
					this.SendPropertyChanging();
					this._TotalHeal = value;
					this.SendPropertyChanged("TotalHeal");
					this.OnTotalHealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPlayerScore", DbType="BigInt")]
		public System.Nullable<long> TotalPlayerScore
		{
			get
			{
				return this._TotalPlayerScore;
			}
			set
			{
				if ((this._TotalPlayerScore != value))
				{
					this.OnTotalPlayerScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalPlayerScore = value;
					this.SendPropertyChanged("TotalPlayerScore");
					this.OnTotalPlayerScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScoreRank", DbType="BigInt")]
		public System.Nullable<long> TotalScoreRank
		{
			get
			{
				return this._TotalScoreRank;
			}
			set
			{
				if ((this._TotalScoreRank != value))
				{
					this.OnTotalScoreRankChanging(value);
					this.SendPropertyChanging();
					this._TotalScoreRank = value;
					this.SendPropertyChanged("TotalScoreRank");
					this.OnTotalScoreRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTimeCrowdControlDealt", DbType="BigInt")]
		public System.Nullable<long> TotalTimeCrowdControlDealt
		{
			get
			{
				return this._TotalTimeCrowdControlDealt;
			}
			set
			{
				if ((this._TotalTimeCrowdControlDealt != value))
				{
					this.OnTotalTimeCrowdControlDealtChanging(value);
					this.SendPropertyChanging();
					this._TotalTimeCrowdControlDealt = value;
					this.SendPropertyChanged("TotalTimeCrowdControlDealt");
					this.OnTotalTimeCrowdControlDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUnitsHealed", DbType="BigInt")]
		public System.Nullable<long> TotalUnitsHealed
		{
			get
			{
				return this._TotalUnitsHealed;
			}
			set
			{
				if ((this._TotalUnitsHealed != value))
				{
					this.OnTotalUnitsHealedChanging(value);
					this.SendPropertyChanging();
					this._TotalUnitsHealed = value;
					this.SendPropertyChanged("TotalUnitsHealed");
					this.OnTotalUnitsHealedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TowerKills", DbType="BigInt")]
		public System.Nullable<long> TowerKills
		{
			get
			{
				return this._TowerKills;
			}
			set
			{
				if ((this._TowerKills != value))
				{
					this.OnTowerKillsChanging(value);
					this.SendPropertyChanging();
					this._TowerKills = value;
					this.SendPropertyChanged("TowerKills");
					this.OnTowerKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TripleKills", DbType="BigInt")]
		public System.Nullable<long> TripleKills
		{
			get
			{
				return this._TripleKills;
			}
			set
			{
				if ((this._TripleKills != value))
				{
					this.OnTripleKillsChanging(value);
					this.SendPropertyChanging();
					this._TripleKills = value;
					this.SendPropertyChanged("TripleKills");
					this.OnTripleKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrueDamageDealt", DbType="BigInt")]
		public System.Nullable<long> TrueDamageDealt
		{
			get
			{
				return this._TrueDamageDealt;
			}
			set
			{
				if ((this._TrueDamageDealt != value))
				{
					this.OnTrueDamageDealtChanging(value);
					this.SendPropertyChanging();
					this._TrueDamageDealt = value;
					this.SendPropertyChanged("TrueDamageDealt");
					this.OnTrueDamageDealtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrueDamageDealtToChampions", DbType="BigInt")]
		public System.Nullable<long> TrueDamageDealtToChampions
		{
			get
			{
				return this._TrueDamageDealtToChampions;
			}
			set
			{
				if ((this._TrueDamageDealtToChampions != value))
				{
					this.OnTrueDamageDealtToChampionsChanging(value);
					this.SendPropertyChanging();
					this._TrueDamageDealtToChampions = value;
					this.SendPropertyChanged("TrueDamageDealtToChampions");
					this.OnTrueDamageDealtToChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrueDamageTaken", DbType="BigInt")]
		public System.Nullable<long> TrueDamageTaken
		{
			get
			{
				return this._TrueDamageTaken;
			}
			set
			{
				if ((this._TrueDamageTaken != value))
				{
					this.OnTrueDamageTakenChanging(value);
					this.SendPropertyChanging();
					this._TrueDamageTaken = value;
					this.SendPropertyChanged("TrueDamageTaken");
					this.OnTrueDamageTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnrealKills", DbType="BigInt")]
		public System.Nullable<long> UnrealKills
		{
			get
			{
				return this._UnrealKills;
			}
			set
			{
				if ((this._UnrealKills != value))
				{
					this.OnUnrealKillsChanging(value);
					this.SendPropertyChanging();
					this._UnrealKills = value;
					this.SendPropertyChanged("UnrealKills");
					this.OnUnrealKillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisionWardsBoughtInGame", DbType="BigInt")]
		public System.Nullable<long> VisionWardsBoughtInGame
		{
			get
			{
				return this._VisionWardsBoughtInGame;
			}
			set
			{
				if ((this._VisionWardsBoughtInGame != value))
				{
					this.OnVisionWardsBoughtInGameChanging(value);
					this.SendPropertyChanging();
					this._VisionWardsBoughtInGame = value;
					this.SendPropertyChanged("VisionWardsBoughtInGame");
					this.OnVisionWardsBoughtInGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardsKilled", DbType="BigInt")]
		public System.Nullable<long> WardsKilled
		{
			get
			{
				return this._WardsKilled;
			}
			set
			{
				if ((this._WardsKilled != value))
				{
					this.OnWardsKilledChanging(value);
					this.SendPropertyChanging();
					this._WardsKilled = value;
					this.SendPropertyChanged("WardsKilled");
					this.OnWardsKilledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WardsPlaced", DbType="BigInt")]
		public System.Nullable<long> WardsPlaced
		{
			get
			{
				return this._WardsPlaced;
			}
			set
			{
				if ((this._WardsPlaced != value))
				{
					this.OnWardsPlacedChanging(value);
					this.SendPropertyChanging();
					this._WardsPlaced = value;
					this.SendPropertyChanged("WardsPlaced");
					this.OnWardsPlacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Winner", DbType="Bit")]
		public System.Nullable<bool> Winner
		{
			get
			{
				return this._Winner;
			}
			set
			{
				if ((this._Winner != value))
				{
					this.OnWinnerChanging(value);
					this.SendPropertyChanging();
					this._Winner = value;
					this.SendPropertyChanged("Winner");
					this.OnWinnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participant_ParticipantStat", Storage="_Participant", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Participant Participant
		{
			get
			{
				return this._Participant.Entity;
			}
			set
			{
				Participant previousValue = this._Participant.Entity;
				if (((previousValue != value) 
							|| (this._Participant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Participant.Entity = null;
						previousValue.ParticipantStat = null;
					}
					this._Participant.Entity = value;
					if ((value != null))
					{
						value.ParticipantStat = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Participant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Player")]
	public partial class Player : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _MatchHistoryUri;
		
		private System.Nullable<int> _ProfileIcon;
		
		private System.Nullable<long> _SummonerId;
		
		private string _SummonerName;
		
		private System.Nullable<int> _ParticipantId;
		
		private EntityRef<Participant> _Participant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnMatchHistoryUriChanging(string value);
    partial void OnMatchHistoryUriChanged();
    partial void OnProfileIconChanging(System.Nullable<int> value);
    partial void OnProfileIconChanged();
    partial void OnSummonerIdChanging(System.Nullable<long> value);
    partial void OnSummonerIdChanged();
    partial void OnSummonerNameChanging(string value);
    partial void OnSummonerNameChanged();
    partial void OnParticipantIdChanging(System.Nullable<int> value);
    partial void OnParticipantIdChanged();
    #endregion
		
		public Player()
		{
			this._Participant = default(EntityRef<Participant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Participant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatchHistoryUri", DbType="VarChar(MAX)")]
		public string MatchHistoryUri
		{
			get
			{
				return this._MatchHistoryUri;
			}
			set
			{
				if ((this._MatchHistoryUri != value))
				{
					this.OnMatchHistoryUriChanging(value);
					this.SendPropertyChanging();
					this._MatchHistoryUri = value;
					this.SendPropertyChanged("MatchHistoryUri");
					this.OnMatchHistoryUriChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileIcon", DbType="Int")]
		public System.Nullable<int> ProfileIcon
		{
			get
			{
				return this._ProfileIcon;
			}
			set
			{
				if ((this._ProfileIcon != value))
				{
					this.OnProfileIconChanging(value);
					this.SendPropertyChanging();
					this._ProfileIcon = value;
					this.SendPropertyChanged("ProfileIcon");
					this.OnProfileIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummonerId", DbType="BigInt")]
		public System.Nullable<long> SummonerId
		{
			get
			{
				return this._SummonerId;
			}
			set
			{
				if ((this._SummonerId != value))
				{
					this.OnSummonerIdChanging(value);
					this.SendPropertyChanging();
					this._SummonerId = value;
					this.SendPropertyChanged("SummonerId");
					this.OnSummonerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SummonerName", DbType="VarChar(MAX)")]
		public string SummonerName
		{
			get
			{
				return this._SummonerName;
			}
			set
			{
				if ((this._SummonerName != value))
				{
					this.OnSummonerNameChanging(value);
					this.SendPropertyChanging();
					this._SummonerName = value;
					this.SendPropertyChanged("SummonerName");
					this.OnSummonerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="Int")]
		public System.Nullable<int> ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Participant_Player", Storage="_Participant", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Participant Participant
		{
			get
			{
				return this._Participant.Entity;
			}
			set
			{
				Participant previousValue = this._Participant.Entity;
				if (((previousValue != value) 
							|| (this._Participant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Participant.Entity = null;
						previousValue.Player = null;
					}
					this._Participant.Entity = value;
					if ((value != null))
					{
						value.Player = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Participant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiKey")]
	public partial class ApiKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ApiKey1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnApiKey1Changing(string value);
    partial void OnApiKey1Changed();
    #endregion
		
		public ApiKey()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ApiKey", Storage="_ApiKey1", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ApiKey1
		{
			get
			{
				return this._ApiKey1;
			}
			set
			{
				if ((this._ApiKey1 != value))
				{
					this.OnApiKey1Changing(value);
					this.SendPropertyChanging();
					this._ApiKey1 = value;
					this.SendPropertyChanged("ApiKey1");
					this.OnApiKey1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class FunStatsResponse
	{
		
		private string _Name;
		
		private int _Won;
		
		private int _Lost;
		
		private int _Tied;
		
		public FunStatsResponse()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Won")]
		public int Won
		{
			get
			{
				return this._Won;
			}
			set
			{
				if ((this._Won != value))
				{
					this._Won = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lost")]
		public int Lost
		{
			get
			{
				return this._Lost;
			}
			set
			{
				if ((this._Lost != value))
				{
					this._Lost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tied")]
		public int Tied
		{
			get
			{
				return this._Tied;
			}
			set
			{
				if ((this._Tied != value))
				{
					this._Tied = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
